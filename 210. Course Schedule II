class Solution {
public:
    vector<int> findOrder(int numCourses, vector<pair<int, int>>& prerequisites) {
        vector<int> res;
        if (prerequisites.empty()){
            for(int i=0;i<numCourses;i++){
                res.push_back(i);
            }
            return res;
        }
        vector<int> inDegrees(numCourses, 0),record;
        for (int i = 0; i < prerequisites.size(); i++) inDegrees[prerequisites[i].first]++;
        for (int i = 0; i < numCourses; i++) if (!inDegrees[i]) record.push_back(i);
        int num,pos=prerequisites.size()-1;
        int count=0;
        for (int j = 0; j < record.size(); j++){
            num = record[j];
            res.push_back(num);
            if (res.size() == numCourses) {
                return res;
            }
            for (int k = 0; k <=pos; k++){
                if (prerequisites[k].second == num){
                    inDegrees[prerequisites[k].first]--;
                    if (inDegrees[prerequisites[k].first] == 0)record.push_back(prerequisites[k].first);
                }
            }
        }
        res.clear();
        return res;
    }
};
