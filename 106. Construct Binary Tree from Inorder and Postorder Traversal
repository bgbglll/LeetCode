class Solution {
public:
    TreeNode* helper(vector<int>& inorder, vector<int>& postorder,int inStart,int inEnd,int poStart,int poEnd){
        int rootVal=postorder[poEnd];
        TreeNode *root=new TreeNode(rootVal);
        int rootIndex=inStart;
        while(inorder[rootIndex]!=rootVal)rootIndex++;
        int leftLen=rootIndex-inStart;
        if(leftLen>0){
            root->left=helper(inorder, postorder,inStart,rootIndex-1,poStart,poStart+leftLen-1);
        }
        if(inEnd-inStart-leftLen>0){
            root->right=helper(inorder, postorder,rootIndex+1,inEnd,poStart+leftLen,poEnd-1);
        }
        return root;
    }
    TreeNode* buildTree(vector<int>& inorder, vector<int>& postorder) {
        if(inorder.size()==0||postorder.size()==0)return NULL;
        return helper(inorder,postorder,0,inorder.size()-1,0,postorder.size()-1);
    }
};
