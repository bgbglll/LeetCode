class Solution {//遇到‘1’就把他周围的染成非‘1’，计算有多少个‘1’，即连通子图。
public:
    void dfs(vector<vector<char>>& grid, int i, int j){
        if(i<0||i>=grid.size()||j<0||j>=grid[0].size())return;
        if(grid[i][j]=='1'){
            grid[i][j]='2';
            dfs(grid,i-1,j);
            dfs(grid,i+1,j);
            dfs(grid,i,j-1);
            dfs(grid,i,j+1);
        }
    }
int numIslands(vector<vector<char>>& grid) {
    int res=0;
    if(grid.size()==0)return res;
    int m=grid.size();
    int n=grid[0].size();
    for(int i=0;i<m;i++){
        for(int j=0;j<n;j++){
            if(grid[i][j]!='1')continue;
            res++;
            dfs(grid,i,j);
        }
    }
    return res;
}
};
