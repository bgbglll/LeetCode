class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        	vector<vector<int>> res;
	if(nums.size()<4)return res;
	sort(nums.begin(), nums.end());
	for (int i = 0; i<nums.size() - 3; i++){
		if ((i > 0) && nums[i] == nums[i - 1])continue;
		for (int j = i + 1; j<nums.size() - 2; j++){
			int left = j + 1, right = nums.size() - 1;
			if ((j > i+1 )&& nums[j] == nums[j - 1])
				continue;
			int t1 = target - nums[i] - nums[j];
			if (nums[j + 1] + nums[j + 2] > t1) break;     //
			if (nums[nums.size() - 1] + nums[nums.size() - 2] < t1) continue;//关键两句，影响运行速度
			while (left<right){
				int sum = nums[i] + nums[j] + nums[left] + nums[right];
				if (sum<target){
					left++;
				}
				else if (sum>target){
					right--;
				}
				else{
					vector<int> temp;
					temp.push_back(nums[i]);
					temp.push_back(nums[j]);
					temp.push_back(nums[left]);
					temp.push_back(nums[right]);
					res.push_back(temp);
					left++;
					right--;
					while ((left<right) && (nums[left] == nums[left - 1]))left++;
					while ((left<right) && (nums[right] == nums[right + 1]))right--;
				}
			}
		}
	}
	return res;
    }
};
